shell_patterns=1


+ ! t t
@       Do something with the current file
	CMD=%{Enter command (%f is file name, %% is percent char):}
	/usr/local/bin/mccommand.sh each "$CMD" %f
+ t t
@       Do something with tagged files (each)
	CMD=%{Enter command (%f is file(s) name(s), %% is percent char):}
	/usr/local/bin/mccommand.sh each "$CMD" %s
+ t t
-       Do something with tagged files (all)
	CMD=%{Enter command (%f is file(s) name(s), %% is percent char):}
	/usr/local/bin/mccommand.sh all "$CMD" %s



-


s       Desktop search ...
        SPHRASE=%{ Search phrase }
	/usr/local/bin/mcsearch -phrase "$SPHRASE"

+ ! d /*/.local/share/Trash/files & ! d /*/Desktop/Trash
n       New...
	clear
	SNAME=%{ Name (extension marks type, e.g. *.sh,*.py,*.pl,*.html, type 'help' for help) }
	/usr/local/bin/mcnewdocument %d "$SNAME"
	if [ "$?" != "0" ]; then
	    /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	    read TEMP
	fi

+ ! t t & ! t bc & ! d /*/Desktop & ! d /*/.local/share/Trash/files & ! d /*/Desktop/Trash

+ ! d /*/Desktop & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
l       Link to Desktop
	clear
	set %s
	while [ -n "$1" ]; do
	    /usr/bin/printf "\n\nLinking to Desktop...\n"
	    SNAME="$(/usr/local/lib/mcglobals filename "$HOME"/Desktop "$1")"
	    /bin/ln -s %d/"$1" "$HOME"/Desktop/"$SNAME"
	    shift
	done
+ ! t bcf

o       Open...
	/usr/local/bin/mcopen -- %s > /dev/null 2>&1 &
+ ! t t & ! t bc
w       Open with...
	/usr/local/bin/mcsearch -file %f


+ ! t bc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/Trash
D       Move to Trash
	clear
	/usr/local/bin/mctrash move %s



# Trash options





+ d /*/.local/share/Trash/files | d /*/Desktop/Trash & ! t bc & ! f ..
R       Restore
	clear
	/usr/local/bin/mctrash restore %s

+ d /*/.local/share/Trash/files | d /*/Desktop/Trash & ! t bc & ! f ..
D       Remove
	clear
	/usr/local/bin/mctrash delete %s
+ d /*/.local/share/Trash/files | d /*/Desktop/Trash & ! t bc & ! f ..
!       Shred
	clear
	YESNO=%{Are you sure you want to completely wipe selected file(s)? [yes/no]:}
	if [ "$YESNO" = "yes" ]; then
	    YESNO2=%{Are youe REALLY sure?}
	    if [ "$YESNO2" = "yes" ]; then
		/usr/local/bin/mctrash shred %s
		/usr/bin/printf "\n\n		Press [Enter]...\n" 
		read TEMP
	    fi
	fi




#Sending...





+ t nrl & ! t bc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/Trash
T       Send as attachment(s)
	/usr/bin/printf "No command cofigured...\n\n		Press [Enter]...\n" 
	read TEMP
+ t nrl & ! t bc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/Trash
B       Push by Bluetooth
	/usr/bin/printf "No command configured...\n\n		Press [Enter]...\n" 
	read TEMP
+ ! t t & ! t dbc &! d /*/.local/share/Trash/files & ! d /*/Desktop/Trash
R       Copy file(s) to remote host
	clear
	SHOST=%{To which host?}
	SDIR=%{To which directory?}
	set %s
	while [ -n "$1" ]; do
	  /usr/bin/scp -p %d/"$1" "${SHOST}:$SDIR"
	  shift
	done







-

# Images, graphics etc. ...




+ f {*.JPG,*.[jJ][pP][gG],*.[pP][nN][gG],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW} & t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
3       View files...
	/usr/local/bin/mcfehview.sh %t > /dev/null 2>&1 &
+ f {*.[bB][mM][pP],*.tif,*.TIF,*.[xX][pbPB][mM],*.ico,*.ICO} | f {*.svg,*.SVG,*.icon,*.ICON,*.ico,*.ICO,*.bitmap,*.BITMAP,*.PCX,*.pcx,*.PCC,*.pcc} & t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
3       View files...
	/usr/local/bin/mcim6view.sh %t > /dev/null 2>&1 &


+ f {*.JPG,*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Convert image(s) to thumbnail(s)
	clear
	SY=%{Thumbnail height (e.g. 300): }
	SX=%{Thumbnail width (e.g. 300): }
	CONVDIR="$PWD/Thumbnails_$(/bin/date +"%%Y-%%m-%%d %%H:%%m:%%S")"
	/bin/mkdir "$CONVDIR"
	/usr/bin/printf "Converted thumbnails will be saved to $CONVDIR.\nThis may take a while...\n"
	set %s; CONVFOR=%{Target format (e.g jpg): }
	while [ -n "$1" ]; do
	  SNAME="$(/usr/local/lib/mcglobals filename "$CONVDIR" "$1" "$CONVFOR")"
	  /usr/bin/convert -thumbnail "$SX"x"$SY" "$1" "$CONVDIR"/"$SNAME"
	  shift
	done
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Resize image(s)
	clear
	ARGS=%{Size in pixels (e.g. 100x100):}
	CONVDIR="$PWD/Resized_on_$(/bin/date +"%%Y-%%m-%%d %%H:%%m:%%S")"
	/bin/mkdir "$CONVDIR"
	set %s
	while [ -n "$1" ]; do
	  SNAME="$(/usr/local/lib/mcglobals filename "$CONVDIR" "$1" "$CONVFOR")"
	  /usr/bin/convert -resize "$ARGS" "$1" "$CONVDIR/$SNAME"
	  shift
	done
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Rotate image(s)
	clear
	ARGS=%{Angle in degrees (e.g. 90,270,-90):}
	CONVDIR="$PWD/Rotated_on_$(/bin/date +"%%Y-%%m-%%d %%H:%%m:%%S")"
	mkdir "$CONVDIR"
	set %s
	while [ -n "$1" ]; do
	  SNAME="$(/usr/local/lib/mcglobals filename "$CONVDIR" "$1" "$CONVFOR")"
	  /usr/bin/convert -rotate "$ARGS" "$1" "$CONVDIR/$SNAME"
	  shift
	done
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[jJ][pP][gG],*.[pP][nN][gG],*.[jJ][pP][eE][gG]} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Set quality
	clear
	ARGS=%{Quality - percentage (e.g. 85):}
	CONVDIR="$PWD/Changed_on_$(/bin/date +"%%Y-%%m-%%d %%H:%%m:%%S")"
	/bin/mkdir "$CONVDIR"
	set %s
	while [ -n "$1" ]; do
	  SNAME="$(/usr/local/lib/mcglobals filename "$CONVDIR" "$1" "$CONVFOR")"
	  /usr/bin/convert -quality "$ARGS" "$1" "$CONVDIR/$SNAME"
	  shift
	done
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.JPG,*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Extract steganographic data from image
	clear
	SNAME="$(/usr/local/lib/mcglobals filename %d %f.steg)"
	/usr/bin/steghide extract -sf %d/%f > "$SNAME"
	/usr/bin/less "$SNAME"
+ f {*.JPG,*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Hide text in image
	clear
	SFILE="$(/usr/local/lib/tcmfilechoose.sh %d "Choose text file to embed")"
	if [ -f "$SFILE" ]; then
	    /usr/bin/steghide embed -cf %f -ef "$SFILE"
	    /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	    read TEMP
	fi
+ f {*.JPG,*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Detect steganographic data
	clear
+ f {*.JPG,*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Extract text from image(s)
	LNG="%{Language (e.g. eng, pol, deu; type 'help' for help:}"
	/usr/local/bin/mcimagetotext.sh "$LNG" %s
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.JPG,*.[jJ][pP][gG],*.[pP][nN][gG],*.[bB][mM][pP],*.[jJ][pP][eE][gG],*.[gG][iI][fF],*.tif,*.TIF,*.[xX][pbPB][mM],*.pcx,*.PCX,*.ico,*.ICO,*.pic} | f {*.PIC,*.ai,*.AI,*.ppm,*.PPM,*.svg,*.SVG,*.icon,*.ICON,*.screenshot,*.SCREENSHOT,*.thumb,*.THUMB,*.raw,*.RAW,*.bitmap,*.BITMAP} & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Set as Desktop Background
        /usr/local/bin/mcwallpaper.sh %f &




# Multimedia options...





+ f {*.[mM][pP][gG],*.[mM][pP]4,*.mpeg,*.MPEG,*.avi,*.AVI,*.og[gv],*.OG[GV],*.mov,*.MOV,*.wm[va],*.WM[VA],*.webm,*.WEBM,*.rmvb,*.RMVB,*.mkv,*.MKV} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Convert to YouTube-friendly format
	/usr/local/bin/mcconvert youtube %s
+ f {*.[mM][pP][123],*.[wW][aW][vV],*.midi,*.MIDI,*.m3u,*.M3U,*.flac,*.FLAC,*.cda,*.CDA,*.mpa,*.MPA,*.apu,*.APU,*.raw,*.RAW,*.mpg3,*.MPG3,*.m2s,*.M2S} | f {*.[mM][pP][gG],*.[mM][pP]4,*.mpeg,*.MPEG,*.avi,*.AVI,*.og[gv],*.OG[GV],*.mov,*.MOV,*.wm[va],*.WM[VA],*.webm,*.WEBM,*.rmvb,*.RMVB,*.mkv,*.MKV} & t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Merge audio/video files
	clear
	SNAME=%{Target name (e.g example.mp3): }
	SNAME="$(/usr/local/lib/mcglobals filename %d "$SNAME")"
	/usr/bin/printf "Generating file list...\n\n"
	TEMP_FILE="conv$(/bin/date +"%s").tmp"
	set %t
	while [ -n "$1" ]; do
	  /usr/bin/printf "file '%d/$1'" >> "$TEMP_FILE"
	  /usr/bin/printf "\n" >> "$TEMP_FILE"
	  shift
	done
	/usr/bin/printf "\n\nMerging...\n\n"
	/usr/bin/ffmpeg -f concat -i "$TEMP_FILE" -acodec copy "$SNAME"
	/bin/rm "$TEMP_FILE"
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[mM][pP][123],*.[wW][aW][vV],*.midi,*.MIDI,*.m3u,*.M3U,*.flac,*.FLAC,*.cda,*.CDA,*.mpa,*.MPA,*.apu,*.APU,*.raw,*.RAW,*.mpg3,*.MPG3,*.m2s,*.M2S} | f {*.[mM][pP][gG],*.[mM][pP]4,*.mpeg,*.MPEG,*.avi,*.AVI,*.og[gv],*.OG[GV],*.mov,*.MOV,*.wm[va],*.WM[VA],*.webm,*.WEBM,*.rmvb,*.RMVB,*.mkv,*.MKV} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Extract images from multimedia
	clear
	CONVDIR="$PWD/Images_extracted_on_$(/bin/date +"%%Y-%%m-%%d %%H:%%m:%%S")"
	CONVDIR="$(/usr/local/lib/mcglobals filename %d "$CONVDIR")"
	mkdir "$CONVDIR"
	/usr/bin/printf "\nExtracted images will be saved to $CONVDIR. This may take a while...\n"
	set %s
	while [ -n "$1" ]; do
	    NEW_FILE="$CONVDIR"/"$(/usr/bin/basename "$1")".jpg
	    /usr/bin/exiftool -b -Picture "$1" > "$NEW_FILE"
	    shift
	done
	/usr/bin/find "$CONVDIR" -type f -empty -delete




#Executables




+ ! t t & t x & ! t ldbc &
x       Execute in current terminal
        clear
	./%f
        /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ ! t t & t x & ! t ldbc &
-       Execute in current terminal as ROOT
        clear
	/usr/bin/sudo ./%f
        /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP










# Block Devices


+ t b & ! t t
?       Block device info
	clear
	/sbin/blkid %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP






#C Sources



+ f *.c | f *.C & ! t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Compile C source file
	clear
	/usr/bin/gcc -c %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.cpp | f *.CPP & ! t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Compile C++ source file
	clear
	/usr/bin/g++ -c %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.o | f *.O & ! t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Link object file
	clear
	SNAME=%{Output file name: }
	/usr/bin/g++ -o "$SNAME" %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.o | f *.O & t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Link object files
	clear
	SNAME=%{Output file name: }
	/usr/bin/g++ -o "$SNAME" %t
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.c | f *.C & ! t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Compile C source file (debug)
	clear
	/usr/bin/gcc -g -c %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.cpp | f *.CPP & ! t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Compile C++ source file (debug)
	clear
	/usr/bin/g++ -g -c %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.o | f *.O & ! t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Link object file (debug)
	clear
	SNAME=%{Output file name: }
	/usr/bin/g++ -g -o "$SNAME" %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.o | f *.O & t t & t r & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash 
-       Link object files (debug)
	clear
	SNAME=%{Output file name: }
	/usr/bin/g++ -g -o "$SNAME" %t
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP



#PDF Options




+ f {*.[pP][dD][fF],*.[pP][dD][fF][aA_eExXzZ32]} & t nrl & ! t t & ! t dbcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Extract images from PDF
	clear
	CONVDIR="$PWD/Images_from_"%f
	CONVDIR="$(/usr/local/lib/mcglobals filename %d "$CONVDIR")"
	/bin/mkdir "$CONVDIR"
	/usr/bin/printf "\nExtracted images will be saved to $CONVDIR. This may take a while...\n"
    	/usr/bin/pdfimages %f "$CONVDIR/image"
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[pP][dD][fF],*.[pP][dD][fF][aA_eExXzZ32]} & t nrl & ! t t & ! t dbcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Burst PDF into separate pages
	clear
	CONVDIR="$PWD/Pages_from_"%f
	CONVDIR="$(/usr/local/lib/mcglobals filename %d "$CONVDIR")"
	/bin/mkdir "$CONVDIR"
	/usr/bin/printf "Bursting PDF file. Extracted pages will be saved to:\n $CONVDIR\n\n"
	cd "$CONVDIR" && /usr/bin/pdftk %d/%f burst
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[pP][dD][fF],*.[pP][dD][fF][aA_eExXzZ32]} & t nrl & ! t t & ! t dbcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Extract attachments/files from PDF
	clear
	CONVDIR="$PWD/Attachments_from_"%f
	CONVDIR="$(/usr/local/lib/mcglobals filename %d "$CONVDIR")"
	mkdir "$CONVDIR"
	/usr/bin/printf "Extracting PDF file. Extracted files will be saved to:\n $CONVDIR\n\n"
	/usr/bin/pdftk %d/%f unpack_files output "$CONVDIR"
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[pP][dD][fF],*.[pP][dD][fF][aA_eExXzZ32]} & t nrl & ! t t & ! t dbcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Repair PDF file
	clear
	TARGET=%d/"REPAIRED_"%f
	TARGET="$(/usr/local/lib/mcglobals filename %d "$TARGET")"
	/usr/bin/printf "Repairing PDF.\n It will be saved as $TARGET\n\n"
	/usr/bin/pdftk %d/%f output "$TARGET"
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[pP][dD][fF],*.[pP][dD][fF][aA_eExXzZ32]} & t nrl & ! t t & ! t dbcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Encrypt PDF file
	clear
	TARGET=%d/"ENCRYPTED_"%f
	TARGET="$(/usr/local/lib/mcglobals filename %d "$TARGET")"
	SPASS=%{Passphrase: }
	SPASS2=%{Repeat passphrase: }
	if [ "$SPASS" = "$SPASS2" ]; then
	    /usr/bin/printf "Encrypting PDF.\n It will be saved as $TARGET\n\n"
	    /usr/bin/pdftk %d/%f output "$TARGET" user_pw "$SPASS"
	    /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	else
	    /usr/bin/printf "Passphrases do not match!\n\n\n\t\tPress [Enter]...\n"
	fi
	read TEMP
+ f {*.[pP][dD][fF],*.[pP][dD][fF][aA_eExXzZ32]} & t nrl & ! t t & ! t dbcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Decrypt PDF file
	clear
	TARGET=%d/"DECRYPTED_"%f
	TARGET="$(/usr/local/lib/mcglobals filename %d "$TARGET")"
	SPASS=%{Passphrase: }
	/usr/bin/printf "Decrypting PDF.\n It will be saved as $TARGET\n\n"
	/usr/bin/pdftk %d/%f input_pw "$SPASS" output "$TARGET"
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f {*.[pP][dD][fF],*.[pP][dD][fF][aA_eExXzZ32]} & t nrl & t t & ! t dbcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Merge PDF files
	clear
	/usr/bin/printf "Merging...\n\n"
	TARGET=%{Target file name (e.g. Ebook.pdf):}
	TARGET="$(/usr/local/lib/mcglobals filename %d "$TARGET")"
	/usr/bin/pdftk %t output %d/"$TARGET"
	if [ "$?" != "0" ]; then
	    /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	    read TEMP
	else
	    :
	fi




#Plain text and email files



+ f {*.[tT][xX][tT],*.asc,*.ASC,*.log,*.LOG,*.conf,*.CONF,*.cnf,*.CNF,*.cfg,*.CFG,*.tmp,*.TMP} & t r & ! t bdc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Convert text file(s) (multiplatform)
	clear
	SFORMAT=%{Convert to (1-Unix, 2-DOS/Win, 3-MAC):}
	case "$SFORMAT" in
	    "1")	/usr/bin/dos2unix -- %s
			/usr/bin/mac2unix -- %s
	    ;;
	    "2")
			/usr/bin/mac2unix -- %s
			/usr/bin/unix2dos -- %s
	    ;;
	    "3")
			/usr/bin/dos2unix -- %s
			/usr/bin/unix2mac -- %s
	    ;;
	    *)
		/usr/bin/printf "\n\nNo suitable format selected...\n"
	    ;;
	esac
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP

+ f {*.[tT][xX][tT],*.asc,*.ASC,*.log,*.LOG,*.conf,*.CONF,*.cnf,*.CNF,*.cfg,*.CFG,*.tmp,*.TMP} & t r & ! t t & ! t bdc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Copy text file to Clipboard
	/bin/cat %d/%f | /usr/bin/xclip -selection clipboard
	if [ "$?" = "0" ]; then
	    /usr/bin/notify-send "Text file copied to clipboard" > /dev/null 2>&1 &
	else
	    /usr/bin/notify-send "Error copying file to clipboard!" > /dev/null 2>&1 &
	fi
+ f {*.[tT][xX][tT],*.asc,*.ASC,*.log,*.LOG,*.conf,*.CONF,*.cnf,*.CNF,*.cfg,*.CFG,*.tmp,*.TMP} & t t & t r & ! t bdc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Join text files (alpabetic order)
	clear
	SNAME=%{New file name:}
	SNAME="$(/usr/local/lib/mcglobals filename %d "$SNAME")"
	/bin/cat %t > "$SNAME"






#Archives and archiving




+ f {*.zip,*.ZIP,*.rar,*.RAR,*.gz,*.GZ,*.bz2,*.BZ2,*.tar,*.TAR,*.tgz,*.TGZ,*.rpm,*.RPM,*.z,*.Z,*.arj,*.ARJ,*.cab,*.CAB,*.7z,*.7Z,*.ace,*.ACE,*.tar.xz,*.TAR.XZ,*.tbz2,*.TBZ2} & t nrlx & ! t bdcf & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
x       Extract archive(s)
	clear
	/usr/bin/atool -x -e %s
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f *.[zZ][iI][pP] & ! t bcld & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Add/change archive password
	clear
	/usr/bin/zipcloak %f
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f *.[rR][aA][rR] & ! t bcld & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Add/change archive password
	clear
	/usr/bin/rar ch -hp %f
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ f *.[rR][aA][rR] & ! t bcld & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Repair archive
	clear
	/usr/bin/rar r %f
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP


#Folders



+ t d & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash & ! t t
-       Create ISO image of this folder
	clear
	SNAME=%{ISO image name (path optional): }
	SNAME="$(/usr/local/lib/mcglobals filename %d "$SNAME")"
	/usr/bin/mkisofs -o $SNAME %f
+ t d & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       View pictures from dir...
	/usr/bin/printf %s "Searching folder for images..."
	/usr/local/bin/mcfehview.sh %s > /dev/null 2>&1 &
+ t d & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       View bitmaps from dir...
	/usr/bin/printf %s "Searching folder for bitmaps and vector graphics.."
	/usr/local/lib/mcim6view.sh %s > /dev/null 2>&1 &



#Packages



+ f *.deb | f *.DEB & ! t bcld & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Install package to system
	clear
	/usr/bin/sudo /usr/bin/dpkg -i %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP
+ f *.deb | f *.DEB & ! t bcld & ! t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Remove package from system
	clear
	/usr/bin/sudo /usr/bin/dpkg --remove %f
	printf "\n\n\n\t\tPress [Enter]...\n"
        read TEMP



#Others
+ f {*.gpg,*.GPG} & ! t t & ! t fcdb & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       GPG decrypt file
	clear
	/usr/bin/gpg --no-use-agent %f



-




#Printing, metadata and converting

+ t nrl & ! t dbcfx & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
C       Convert...
	clear
	EXT=%{Target file extension (e.g. odt, doc, mp3, avi, pdf, rar, 'help' for help): }
	/usr/local/bin/mcconvert "$EXT" %s
	if [ "$?" != "0" ]; then
	    /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	    read TEMP
	fi


+ ! t bcl & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
A       Add selected to a new archive
	clear
	SNAME=%{Archive name (extension marks format e.g. example.tar.bz, example.rar): }
	SNAME="$(/usr/local/lib/mcglobals filename %d "$SNAME")"
	/usr/bin/atool -a "$SNAME" %s
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ ! t bcl & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
Z       Create a timestamped ZIP
	clear
        SNAME="$(date +"%%Y-%%m-%%d %%H:%%M:%%S")"
        SNAME=%s"_$SNAME"".zip"
	SNAME="$(/usr/local/lib/mcglobals filename %d "$SNAME")"
	/usr/bin/atool -a "$SNAME" %s
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
#+ ! t bcl & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
G       Grep...
	clear
	SPHRASE=%{Search for (regex, wildcard or plain): }
        /usr/local/bin/mcthegrep "$SPHRASE" %s | /usr/bin/less -R        

+ ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash & ! t dlbc
-       Normalize extension(s)
	clear
	/usr/local/bin/mcnormalize %s
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Create file list
	clear
	SNAME=%{List name (e.g playlist.m3u): }
	SNAME="$(/usr/local/lib/mcglobals filename %d "$SNAME")"
	/usr/bin/printf "Generating file list...\n\n"
	set %t
	while [ -n "$1" ]; do
	    /usr/bin/printf %d"/$1" >> "$SNAME"
	    /usr/bin/printf "\n" >> "$SNAME"
	    shift
	done
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ t t & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
6       Rename files/folders...
	clear
	SLINE=%{Rename to (type 'help' for help):}
	/usr/local/bin/mcbatchrename "$SLINE" %t
	if [ "$?" != "0" ]; then
	    /usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	    read TEMP
	fi

+ ! t dbc & ! t t & f {*.[hH][tT][mM]*,*.[hH][tT][mM][lL]*,*.[xX][mM][lL],*.[tT][eE][xX]} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
4       Edit raw
	/usr/bin/mcedit %f
+ ! t dbc & ! t t & f {*.[hH][tT][mM]*,*.[hH][tT][mM][lL]*,*.[xX][mM][lL],*.[tT][eE][xX],*.[rR][tT][fF]} & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
3       View raw
	/usr/bin/less %f






-





h       Processes
	/usr/bin/htop
H       Processes (ROOT)
	clear
	/usr/bin/sudo /usr/bin/htop
F       Files (ROOT)
	clear
	/usr/bin/sudo /usr/bin/mc
I       System Information
	/usr/local/bin/mcsysinfo | /usr/bin/less -R
P       Search packages ...
	SPHRASE=%{Search packages for: }
	/usr/local/bin/mcpackagesearch "$SPHRASE"
-       System Services ...
	/usr/local/bin/mcsysservices


-



c       Calculator
	clear
	/usr/bin/printf "\n\n\e[1;39mCalculator: \e[0;39m"
	/usr/bin/bc -q
m       Manuals...
	SPHRASE=%{Search manuals for: }
	/usr/bin/man "$SPHRASE"
i       Info...
	SPHRASE=%{Search info database for: }
	/usr/bin/info "$SPHRASE"
+ ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
W       Download URL
        clear
        SURL=%{Enter URL that will be downloaded recursively: }
        /usr/bin/wget -r --no-parent $SURL
+ ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
Y       Download Media URL
        clear
        SURL=%{Enter URL that will be downloaded: }
        SOPT=%{Choose option: 1-save as video, 2-save as audio}
        if [ "$SOPT" = "1" ]; then
            /usr/bin/youtube-dl --verbose "$SURL"
        else
            /usr/bin/youtube-dl -x --audio-format mp3 --verbose "$SURL"
        fi
-       Password Generator
	clear
	/usr/bin/apg
	/usr/bin/printf "\n\n		Press [Enter]...\n" 
	read TEMP


-


+ ! t d
S       Scan with ClamAV...
	clear
	/usr/bin/printf "Scanning file with ClamAV...\n\n"
	/usr/bin/sudo /usr/bin/clamscan %s
	printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ t d
S       Scan Directory recursively with ClamAV ...
	clear
	/usr/bin/sudo /usr/bin/clamscan -r %f
	printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP

#you can manually specify encryptions, algorythms and keys here...
+ ! f {*.gpg,*.GPG} & ! t t & ! t fcdb & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
E       GPG encrypt file
	clear
	/usr/bin/gpg --no-use-agent -c %f

+ ! t bc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
!       Shred item(s)
	clear
	YESNO=%{Are you sure you want to completely wipe this file? [yes/no]:}
	if [ "$YESNO" = "yes" ]; then
	    YESNO2=%{Are youe REALLY sure?}
	    if [ "$YESNO2" = "yes" ]; then
		/usr/bin/shred -fvz -n 5 %s
		/bin/rm %s
		/usr/bin/printf "\n\n\n		Press [Enter]...\n" 
		read TEMP 
		exit
	    fi
	fi
+ ! dbclx
-       Clean files' metadata...
	/usr/bin/mat-gui %s &



+ ! t t
-


+ ! t dbc
*       Checksums...
	/usr/bin/gtkhash %s > /dev/null 2>&1 &
+ ! t dbc & ! t t
X       Open in BLESS Hex Editor
	/usr/bin/bless %f > /dev/null 2>&1 &
+ ! t bc
?       File(s) info
	/usr/local/bin/mcfileinfo %s | /usr/bin/less -R



-


+ ! t dbc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Generate checksum file(s)
	clear
	SELECTED=%{Choose checksum (md5,sha1/224/256/384/512/512224/512256,cksum,bsd,sysv):}
	/usr/local/bin/mcchecksums "$SELECTED" %s
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ ! t dbc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Generate thumbnails for selected file(s)
	clear
	/usr/local/bin/mcthumbnailer -- %s
	/usr/bin/printf "\n\n\n\t\tPress [Enter]...\n"
	read TEMP
+ ! t bc & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
k       Backup file(s) (.bak)
	clear
	set %s
	while [ -n "$1" ]; do
	    SNAME="$1".bak
	    printf "$SNAME"
	    SNAME="$(/usr/local/lib/mcglobals filename %d "$SNAME")"
	    /bin/cp "$1" "$SNAME"
	    shift
	done

+ f *.bak* | f *.BAK* & ! t cb & ! d /*/.local/share/Trash/files & ! d /*/Desktop/\ Trash
-       Restore backup file
	clear
	set %s
	while [ -n "$1" ]; do
	    SNAME="$1"
	    SNAME_NEW="$(/usr/bin/printf %s "$SNAME" | /bin/sed 's/\(.*\)\..*/\1/')"
            SNAME_NEW="$(/usr/local/lib/mcglobals filename %d "$SNAME_NEW")"
	    /bin/mv "$SNAME" "$SNAME_NEW"
	    shift
	done


q       Cancel
	