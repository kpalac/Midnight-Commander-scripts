#!/bin/bash



#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

#  Author: Karol PaÅ‚ac (lolko), palac.karol@gmail.com



# This is a script to download audiobooks for Midnight Commander
# Requires audiobook_download.py


. /usr/local/lib/mcCLIinterface
. /usr/local/lib/mcglobals



if [[ ! -x /usr/local/bin/audiobook_download.py ]]; then
    printf "Script /usr/local/bin/audiobook_download.py not found. Aborting..."
    exit 1
fi

PHRASE="$@"

OPTION="1"
PAGE="0"
PAGES="0"

CURR_ITEM=""
CURR_DESC=""
CURR_LINK=""


declare -a RESULTS



TF_Redraw ()
{

    WIDTH="$(/usr/bin/tput cols)"
    HEIGHT="$(/usr/bin/tput lines)"

    PUTY="$(( ($HEIGHT / 2) - 10))"
    PUTX="$(( ($WIDTH / 2) - 45))"

    printfxy $PUTY $PUTX	"		Search Audiobooks for: \e[1;$TEXTCOL $(TF_Nice 100 "$PHRASE")\e[0;$TEXTCOL\033[0K"

    printfxy $(($PUTY+2)) $PUTX	"\e[1;$LINECOL	Page $((PAGE+1)) of $PAGES \e[0;$TEXTCOL\033[0K" #"

    I="1"
    for I in 1 2 3 4 5 6 7 8 9 10; do
                                                                                                                                                                
        if [[ "$OPTION" == "$I" ]]; then
            MARKER="[#]"
        else
            MARKER="[ ]"
        fi
        

        NAME="$(TF_Cut '---->' 1 "${RESULTS[$(((PAGE*10)+I-1))]}")" #"

        if [[ "$OPTION" == "$I" ]]; then
            CURR_DESC="$(TF_Cut '---->' 2 "${RESULTS[$(((PAGE*10)+I-1))]}")" #"        
            CURR_LINK="$CURR_DESC"
            CURR_ITEM="$NAME" #"
        fi

        printfxy $(($PUTY+4+$I)) $PUTX	"	$MARKER  \e[1;$TEXTCOL $(TF_Nice 70 "$NAME") \e[0;$TEXTCOL\033[0K" #"

    done

    printfxy $(($PUTY+16)) $PUTX	"\e[0;$TEXTCOL$(TF_Nice 100 "$CURR_DESC") \033[0K"
    printfxy $(($PUTY+17)) $PUTX	"\033[0K"
    
    printfxy $(($PUTY+18)) $PUTX	"\e[1;$LINECOL[s] New search    \033[0K"

    printfxy $(($PUTY+19)) $PUTX	"\e[1;$LINECOL[?] Check page \033[0K"
    printfxy $(($PUTY+20)) $PUTX	"\e[1;$LINECOL[m] Simulate download \033[0K"
    printfxy $(($PUTY+21)) $PUTX	"\e[1;$LINECOL[d] Download to current directory\033[0K"

    printfxy $(($PUTY+23)) $PUTX	"[q] Cancel\e[0;$TEXTCOL \033[0K"

} #Redraw






TF_GetData ()
{
    clear
    printf "Searching..."

    RESS=$(/usr/local/bin/audiobook_download.py --no_chrome --search "$PHRASE")
    mapfile -t RESULTS < <(printf %s "$RESS")

    PAGES="$(printf %s "$RESS" | wc -l)"
    PAGES=$((PAGES/10+1))
    [[ "$PAGES" == "0" ]] && PAGES="1"

    OPTION="1"
    PAGE="0"

    clear

} #GetData





TF_GetData
TF_Redraw




#Main execution loop

while [[ "$CH" != ['q''Q'] ]]; do

    if [ "$HEIGHT" != "$(/usr/bin/tput lines)" ] || [ "$WIDTH" != "$(/usr/bin/tput cols)" ]; then
	TF_Redraw
    fi

    read -n 1 -t 1 -s CH

    if [ "$CH" = "$(echo -en "\033")" ];then
		CH3="$CH2"
		CH2="$CH"
	    continue
    elif	 [ "$k2" = "$(echo -en "\033")" -a "$k1" = "[" ];then
		CH3="$CH2"
		CH2="$CH"
	    continue
    fi

known_esc_seq=1
last_three_keys="$CH3$CH2$CH"


case "$last_three_keys" in
    "$up")
	OPTION="$(($OPTION-1))"
        if [[ "$OPTION" == "0" ]]; then 		
            if [[ "$PAGE" != "0" ]]; then
                OPTION="10"
                PAGE="$(($PAGE-1))"
                clear
            else
                OPTION="1"
            fi
	fi
        TF_Redraw
     ;;
    "$down")
        OPTION="$(($OPTION+1))"
        if [[ "$OPTION" == "11" ]]; then
    	    if [ "${RESULTS[$(((PAGE+1)*10))]}" != "" ]; then
		PAGE="$(($PAGE+1))"
                OPTION="1"
                clear
            else
                OPTION="10"
            fi
	fi
	TF_Redraw
    ;;
   "$left")
	if [ "$PAGE" != "0" ]; then
		PAGE="$(($PAGE-1))"
                clear
    		TF_Redraw
	fi
    ;;
   "$right")
	if [ "${RESULTS[$(((PAGE+1)*10))]}" != "" ]; then
		PAGE="$(($PAGE+1))"
		clear
                TF_Redraw
	fi
    ;;
    "$pgup")
	if [ "$PAGE" != "0" ]; then
		PAGE="$(($PAGE-1))"
                clear
                TF_Redraw
	fi
    ;;
    "$pgdn")
	if [ "${RESULTS[$(((PAGE+1)*10))]}" != "" ]; then
		PAGE="$(($PAGE+1))"
		clear
                TF_Redraw
	fi
    ;;
    "$home")
	PAGE="0"
	OPTION="0"
	TF_Redraw
    ;;
    *)
	known_esc_seq=0
    ;;

esac



if [ $known_esc_seq -eq 0 ];then

    case "$CH" in
		'?')
		    xdg-open "$CURR_LINK"
		;;
                ['m''M'])
                    clear
                    DIR_NAME="$(MCF_FileName "$(pwd)" "$CURR_ITEM")" #"
                    TARGET_DIR="$(pwd)/$DIR_NAME"
                    TARGET_DIR="${TARGET_DIR## }"
                    TARGET_DIR="${TARGET_DIR%% }"

                    /usr/local/bin/audiobook_download.py --output_dir="$TARGET_DIR" --dry_run "$CURR_LINK"
                    TF_PAK
                    clear
                    CH=""
                    TF_Redraw
                ;;
                ['d''D'])
                    clear
                    DIR_NAME="$(MCF_FileName "$(pwd)" "$CURR_ITEM")" #"                    
                    TARGET_DIR="$(pwd)/$DIR_NAME"
                    TARGET_DIR="${TARGET_DIR## }"
                    TARGET_DIR="${TARGET_DIR%% }"

                    mkdir "$TARGET_DIR"                    

                    /usr/local/bin/audiobook_download.py --output_dir="$TARGET_DIR" "$CURR_LINK"                    
                    TF_PAK
                    clear
                    CH=""
                    TF_Redraw
                ;;
                ['s''S'])
                    /usr/bin/tput cnorm
                    
                    WIDTH="$(/usr/bin/tput cols)"
                    HEIGHT="$(/usr/bin/tput lines)"

                    PUTY="$(( ($HEIGHT / 2) - 10))"
                    PUTX="$(( ($WIDTH / 2) - 45))"

                    printfxy $PUTY $PUTX	"		Search audiobooks for: \e[1;$TEXTCOL \033[0K"
                    read PHRASE
                    /usr/bin/tput civis
		    clear
		    TF_GetData
		    CH=""
		    TF_Redraw
                ;;
		'*')
		    if [ "$HEIGHT" != "$(/usr/bin/tput lines)" ] || [ "$WIDTH" != "$(/usr/bin/tput cols)" ]; then
			TF_Redraw
		    fi
		;;
    esac
fi

        CH3="$CH2"
	CH2="$CH"


done


TF_OnExit 0